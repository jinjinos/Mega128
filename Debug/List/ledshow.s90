///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.20.2.50573 for Atmel AVR       12/Sep/2016  16:06:12 /
// Copyright 1996-2013 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  C:\Users\Admin\Desktop\ATmega128Project\src\ledshow.c   /
//    Command line =  C:\Users\Admin\Desktop\ATmega128Project\src\ledshow.c   /
//                    --cpu=m128a -ms -o C:\Users\Admin\Desktop\ATmega128Proj /
//                    ect\Debug\Obj\ -lCN C:\Users\Admin\Desktop\ATmega128Pro /
//                    ject\Debug\List\ -lb C:\Users\Admin\Desktop\ATmega128Pr /
//                    oject\Debug\List\ -y --initializers_in_flash --no_cse   /
//                    --no_inline --no_code_motion --no_cross_call            /
//                    --no_clustering --no_tbaa --debug                       /
//                    -DENABLE_BIT_DEFINITIONS -e -I                          /
//                    C:\Users\Admin\Desktop\ATmega128Project\inc\            /
//                    --eeprom_size 4096 --dlib --dlib_config "D:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.5\avr\LIB\DLIB\dlAVR-3s-ec_mul-f.h" --vla             /
//                    --use_c++_inline -On                                    /
//    List file    =  C:\Users\Admin\Desktop\ATmega128Project\Debug\List\leds /
//                    how.s90                                                 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ledshow

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?EPILOGUE_B12_L09
        EXTERN ?EPILOGUE_B4_L09
        EXTERN ?EPILOGUE_B8_L09
        EXTERN ?PROLOGUE12_L09
        EXTERN ?PROLOGUE4_L09
        EXTERN ?PROLOGUE8_L09
        EXTERN ?Register_R10_is_cg_reg
        EXTERN ?Register_R11_is_cg_reg
        EXTERN ?Register_R4_is_cg_reg
        EXTERN ?Register_R5_is_cg_reg
        EXTERN ?Register_R6_is_cg_reg
        EXTERN ?Register_R7_is_cg_reg
        EXTERN ?Register_R8_is_cg_reg
        EXTERN ?Register_R9_is_cg_reg
        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_I>`
        PUBLIC Display_Key
        PUBWEAK _A_DDRA
        PUBWEAK _A_DDRD
        PUBWEAK _A_PORTA
        PUBWEAK _A_PORTD
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC dua_table
        PUBLIC ledShow
        PUBLIC ledShowInit
        PUBLIC ledShowNumber
        PUBLIC ledShowSTR
        PUBLIC wei_table

        EXTERN delay_ms
        EXTERN itoa
        EXTERN strlen
        EXTERN toupper


        ASEGN ABSOLUTE:DATA:NOROOT,031H
// union <unnamed> volatile __io _A_DDRD
_A_DDRD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,032H
// union <unnamed> volatile __io _A_PORTD
_A_PORTD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,03aH
// union <unnamed> volatile __io _A_DDRA
_A_DDRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,03bH
// union <unnamed> volatile __io _A_PORTA
_A_PORTA:
        DS8 1

        RSEG NEAR_I:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_I>`
dua_table:
        DS8 17
        REQUIRE `?<Initializer for dua_table>`

        RSEG NEAR_I:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_I>`
wei_table:
        DS8 9
        REQUIRE `?<Initializer for wei_table>`

        RSEG CODE:CODE:NOROOT(1)
ledShowInit:
        LDI     R16, 255
        OUT     0x1A, R16
        LDI     R16, 0
        OUT     0x1B, R16
        IN      R16, 0x11
        ORI     R16, 0x30
        OUT     0x11, R16
        LDI     R16, 255
        OUT     0x12, R16
        RET
        REQUIRE _A_DDRA
        REQUIRE _A_PORTA
        REQUIRE _A_DDRD
        REQUIRE _A_PORTD

        RSEG CODE:CODE:NOROOT(1)
ledShow:
        CALL    ?PROLOGUE4_L09
        MOVW    R27:R26, R17:R16
        LDI     R25, 1
        LDI     R24, 0
??ledShow_0:
        CPI     R24, 8
        BRCC    ??ledShow_1
        SBI     0x12, 0x04
        SBI     0x12, 0x05
        MOV     R16, R25
        COM     R16
        OUT     0x1B, R16
        CBI     0x12, 0x05
        LSL     R25
        MOV     R16, R24
        LDI     R17, 0
        MOVW    R31:R30, R27:R26
        ADD     R30, R16
        ADC     R31, R17
        LD      R16, Z
        OUT     0x1B, R16
        CBI     0x12, 0x04
        LDI     R16, 1
        LDI     R17, 0
        CALL    delay_ms
        INC     R24
        RJMP    ??ledShow_0
??ledShow_1:
        LDI     R30, 4
        JMP     ?EPILOGUE_B4_L09
        REQUIRE _A_PORTD
        REQUIRE _A_PORTA

        RSEG CODE:CODE:NOROOT(1)
Display_Key:
        CALL    ?PROLOGUE4_L09
        MOV     R26, R16
        LDI     R25, 1
        LDI     R24, 0
??Display_Key_0:
        CPI     R24, 8
        BRCC    ??Display_Key_1
        SBI     0x12, 0x04
        SBI     0x12, 0x05
        MOV     R16, R24
        LDI     R17, 0
        MOVW    R31:R30, R17:R16
        SUBI    R30, LOW((-(wei_table) & 0xFFFF))
        SBCI    R31, (-(wei_table) & 0xFFFF) >> 8
        LD      R16, Z
        OUT     0x1B, R16
        CBI     0x12, 0x05
        LSL     R25
        LDI     R27, 0
        MOVW    R31:R30, R27:R26
        SUBI    R30, LOW((-(dua_table) & 0xFFFF))
        SBCI    R31, (-(dua_table) & 0xFFFF) >> 8
        LD      R16, Z
        OUT     0x1B, R16
        CBI     0x12, 0x04
        LDI     R16, 1
        LDI     R17, 0
        CALL    delay_ms
        INC     R24
        RJMP    ??Display_Key_0
??Display_Key_1:
        LDI     R30, 4
        JMP     ?EPILOGUE_B4_L09
        REQUIRE _A_PORTD
        REQUIRE _A_PORTA

        RSEG CODE:CODE:NOROOT(1)
ledShowSTR:
        CALL    ?PROLOGUE8_L09
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        REQUIRE ?Register_R7_is_cg_reg
        MOVW    R27:R26, R17:R16
        MOVW    R7:R6, R19:R18
        MOVW    R5:R4, R21:R20
        LDI     R24, 0
        LDI     R25, 0
        LDI     R24, 0
        LDI     R25, 0
??ledShowSTR_0:
        MOVW    R17:R16, R7:R6
        CALL    strlen
        CP      R24, R16
        CPC     R25, R17
        BRCS    $+2+2
        RJMP    ??ledShowSTR_1
        MOVW    R31:R30, R7:R6
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        OUT     0x1B, R16
        SBI     0x12, 0x05
        CBI     0x12, 0x05
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        CPI     R16, 58
        BRCC    ??ledShowSTR_2
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        CPI     R16, 48
        BRCS    ??ledShowSTR_2
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        LDI     R17, 0
        MOVW    R31:R30, R17:R16
        SUBI    R30, LOW((-(dua_table - 48) & 0xFFFF))
        SBCI    R31, HIGH((-(dua_table - 48) & 0xFFFF))
        LD      R16, Z
        OUT     0x1B, R16
        RJMP    ??ledShowSTR_3
??ledShowSTR_2:
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        LDI     R17, 0
        CALL    toupper
        CPI     R16, 71
        LDI     R18, 0
        CPC     R17, R18
        BRGE    ??ledShowSTR_3
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        LDI     R17, 0
        CALL    toupper
        CPI     R16, 65
        LDI     R18, 0
        CPC     R17, R18
        BRLT    ??ledShowSTR_3
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        LD      R16, Z
        LDI     R17, 0
        MOVW    R31:R30, R17:R16
        SUBI    R30, LOW((-(dua_table - 55) & 0xFFFF))
        SBCI    R31, HIGH((-(dua_table - 55) & 0xFFFF))
        LD      R16, Z
        OUT     0x1B, R16
??ledShowSTR_3:
        CP      R24, R4
        CPC     R25, R5
        BRNE    ??ledShowSTR_4
        LDI     R16, 7
        CP      R4, R16
        LDI     R16, 0
        CPC     R5, R16
        BREQ    ??ledShowSTR_4
        SBI     0x1B, 0x07
??ledShowSTR_4:
        SBI     0x12, 0x04
        CBI     0x12, 0x04
        LDI     R16, 1
        LDI     R17, 0
        CALL    delay_ms
        ADIW    R25:R24, 1
        RJMP    ??ledShowSTR_0
??ledShowSTR_1:
        LDI     R30, 8
        JMP     ?EPILOGUE_B8_L09
        REQUIRE _A_PORTA
        REQUIRE _A_PORTD

        RSEG CODE:CODE:NOROOT(1)
ledShowNumber:
        CALL    ?PROLOGUE12_L09
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        REQUIRE ?Register_R7_is_cg_reg
        REQUIRE ?Register_R8_is_cg_reg
        REQUIRE ?Register_R9_is_cg_reg
        REQUIRE ?Register_R10_is_cg_reg
        REQUIRE ?Register_R11_is_cg_reg
        SBIW    R29:R28, 9
        MOVW    R5:R4, R17:R16
        MOVW    R7:R6, R19:R18
        MOVW    R27:R26, R21:R20
        MOVW    R9:R8, R23:R22
        LDD     R24, Y+21
        LDD     R25, Y+22
        MOVW    R19:R18, R29:R28
        MOVW    R31:R30, R19:R18
        LDI     R20, 0
        LDI     R16, 9
??ledShowNumber_0:
        ST      Z+, R20
        DEC     R16
        BRNE    ??ledShowNumber_0
        MOVW    R23:R22, R25:R24
        MOVW    R21:R20, R29:R28
        MOVW    R17:R16, R5:R4
        MOVW    R19:R18, R7:R6
        CALL    itoa
        MOVW    R17:R16, R27:R26
        CALL    strlen
        MOVW    R11:R10, R17:R16
        MOVW    R17:R16, R29:R28
        CALL    strlen
        MOVW    R21:R20, R9:R8
        MOVW    R19:R18, R27:R26
        ADD     R18, R10
        ADC     R19, R11
        NEG     R17
        NEG     R16
        SBCI    R17, 0
        ADD     R18, R16
        ADC     R19, R17
        MOVW    R17:R16, R29:R28
        RCALL   ledShowSTR
        ADIW    R29:R28, 9
        LDI     R30, 14
        JMP     ?EPILOGUE_B12_L09

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        RSEG NEAR_ID:CODE:NOROOT(0)
`?<Initializer for dua_table>`:
        DC8 63, 6, 91, 79, 102, 109, 125, 7, 127, 111, 119, 124, 57, 94, 121
        DC8 113, 0

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_I>`:
        DC16    SFE(NEAR_I) - SFB(NEAR_I)
        DC16    SFB(NEAR_I)
        DP      SFB(NEAR_ID)
        REQUIRE ?need_segment_init

        RSEG NEAR_ID:CODE:NOROOT(0)
`?<Initializer for wei_table>`:
        DC8 254, 253, 251, 247, 239, 223, 191, 127, 0

        RSEG FAR_F:CODE:NOROOT(0)
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0

        END
// 
//   4 bytes in segment ABSOLUTE
// 434 bytes in segment CODE
//   9 bytes in segment FAR_F
//   7 bytes in segment INITTAB
//  26 bytes in segment NEAR_I
//  26 bytes in segment NEAR_ID
// 
// 469 bytes of CODE memory (+ 7 bytes shared)
//  26 bytes of DATA memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
