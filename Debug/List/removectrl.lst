###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.21.3.50641 for Atmel AVR        20/Sep/2016  17:32:33 #
# Copyright 1996-2013 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  C:\Users\Administrator\Desktop\ATmega128Project\src\remo #
#                    vectrl.c                                                 #
#    Command line =  C:\Users\Administrator\Desktop\ATmega128Project\src\remo #
#                    vectrl.c --cpu=m128a -ms -o                              #
#                    C:\Users\Administrator\Desktop\ATmega128Project\Debug\Ob #
#                    j\ -lCN C:\Users\Administrator\Desktop\ATmega128Project\ #
#                    Debug\List\ -lb C:\Users\Administrator\Desktop\ATmega128 #
#                    Project\Debug\List\ -y --initializers_in_flash --no_cse  #
#                    --no_inline --no_code_motion --no_cross_call             #
#                    --no_clustering --no_tbaa --debug                        #
#                    -DENABLE_BIT_DEFINITIONS -e -I                           #
#                    C:\Users\Administrator\Desktop\ATmega128Project\inc\     #
#                    --eeprom_size 4096 --dlib --dlib_config "D:\Program      #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\avr\LIB\DLIB\dlAVR-3s-ec_mul-f.h" --vla              #
#                    --use_c++_inline -On                                     #
#    List file    =  C:\Users\Administrator\Desktop\ATmega128Project\Debug\Li #
#                    st\removectrl.lst                                        #
#    Object file  =  C:\Users\Administrator\Desktop\ATmega128Project\Debug\Ob #
#                    j\removectrl.r90                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\ATmega128Project\src\removectrl.c
      1          //无线遥控模块的驱动
      2          
      3          //VCC 接5V		GND接地
      4          //D0-D3 接 PC1-PC4
      5          //VT接PC0
      6          #include <stdio.h>
      7          #include <iom128a.h>

   \                                 In  segment ABSOLUTE, at 0x33
   \   union <unnamed> volatile __io _A_PINC
   \                     _A_PINC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x34
   \   union <unnamed> volatile __io _A_DDRC
   \                     _A_DDRC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x35
   \   union <unnamed> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1
      8          #include "removectrl.h"
      9          #include "ledshow.h"
     10          #include "led.h"
     11          
     12          

   \                                 In  segment CODE, align 2, keep-with-next
     13          void removeCtrlInit(void)
   \                     removeCtrlInit:
     14          {
     15          	RC_KEY_IN;
   \   00000000   B304               IN      R16, 0x14
   \   00000002   7E00               ANDI    R16, 0xE0
   \   00000004   BB04               OUT     0x14, R16
     16          	RC_KEY_SET;
   \   00000006   B305               IN      R16, 0x15
   \   00000008   610F               ORI     R16, 0x1F
   \   0000000A   BB05               OUT     0x15, R16
     17          }
   \   0000000C   9508               RET
   \   0000000E                      REQUIRE _A_DDRC
   \   0000000E                      REQUIRE _A_PORTC
     18          

   \                                 In  segment CODE, align 2, keep-with-next
     19          unsigned char removeCtrlGetKey(void)
   \                     removeCtrlGetKey:
     20          {
     21          	//如果有按键按下
     22          	if(RC_KEY)
   \   00000000   9B98               SBIS    0x13, 0x00
   \   00000002   C010               RJMP    ??removeCtrlGetKey_0
     23          	{
     24          		//判断是哪一个按键
     25          		if(RC_KEY1)
   \   00000004   9B99               SBIS    0x13, 0x01
   \   00000006   C002               RJMP    ??removeCtrlGetKey_1
     26          		{
     27          			return '1';
   \   00000008   E301               LDI     R16, 49
   \   0000000A   9508               RET
     28          		}
     29          		else if(RC_KEY2)
   \                     ??removeCtrlGetKey_1:
   \   0000000C   9B9A               SBIS    0x13, 0x02
   \   0000000E   C002               RJMP    ??removeCtrlGetKey_2
     30          		{
     31          			return '2';
   \   00000010   E302               LDI     R16, 50
   \   00000012   9508               RET
     32          		}
     33          		else if(RC_KEY3)
   \                     ??removeCtrlGetKey_2:
   \   00000014   9B9B               SBIS    0x13, 0x03
   \   00000016   C002               RJMP    ??removeCtrlGetKey_3
     34          		{
     35          			return '3';
   \   00000018   E303               LDI     R16, 51
   \   0000001A   9508               RET
     36          		}
     37          		else if(RC_KEY4)
   \                     ??removeCtrlGetKey_3:
   \   0000001C   9B9C               SBIS    0x13, 0x04
   \   0000001E   C002               RJMP    ??removeCtrlGetKey_0
     38          		{
     39          			return '4';
   \   00000020   E304               LDI     R16, 52
   \   00000022   9508               RET
     40          		}
     41          	}
     42          	return 0;
   \                     ??removeCtrlGetKey_0:
   \   00000024   E000               LDI     R16, 0
   \   00000026   9508               RET
   \   00000028                      REQUIRE _A_PINC
     43          }
     44          

   \                                 In  segment CODE, align 2, keep-with-next
     45          void removeCtrlTest(void)
   \                     removeCtrlTest:
     46          {
   \   00000000   938A               ST      -Y, R24
     47          	unsigned char key;
     48          	while(1)
     49          	{
     50          		if(key = removeCtrlGetKey())
   \                     ??removeCtrlTest_0:
   \   00000002   ....               RCALL   removeCtrlGetKey
   \   00000004   2F80               MOV     R24, R16
   \   00000006   2300               TST     R16
   \   00000008   F141               BREQ    ??removeCtrlTest_1
     51          		{
     52          			switch(key)
   \   0000000A   2F08               MOV     R16, R24
   \   0000000C   5301               SUBI    R16, 49
   \   0000000E   F039               BREQ    ??removeCtrlTest_2
   \   00000010   950A               DEC     R16
   \   00000012   F069               BREQ    ??removeCtrlTest_3
   \   00000014   950A               DEC     R16
   \   00000016   F091               BREQ    ??removeCtrlTest_4
   \   00000018   950A               DEC     R16
   \   0000001A   F0B9               BREQ    ??removeCtrlTest_5
   \   0000001C   C01C               RJMP    ??removeCtrlTest_6
     53          			{
     54          			  case '1':
     55          				LED8 = ~LED8;
   \                     ??removeCtrlTest_2:
   \   0000001E   B308               IN      R16, 0x18
   \   00000020   9500               COM     R16
   \   00000022   BB08               OUT     0x18, R16
     56          				printf("你按下的按键是A\r\n");
   \   00000024   ....               LDI     R16, LOW(`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2`)
   \   00000026   ....               LDI     R17, (`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2`) >> 8
   \   00000028   ........           CALL    printf
     57          				break;
   \   0000002C   C014               RJMP    ??removeCtrlTest_6
     58          			  case '2':
     59          				LED8 = 0xFF;
   \                     ??removeCtrlTest_3:
   \   0000002E   EF0F               LDI     R16, 255
   \   00000030   BB08               OUT     0x18, R16
     60          				printf("你按下的按键是B\r\n");
   \   00000032   ....               LDI     R16, LOW(`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_1`)
   \   00000034   ....               LDI     R17, (`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_1`) >> 8
   \   00000036   ........           CALL    printf
     61          				break;
   \   0000003A   C00D               RJMP    ??removeCtrlTest_6
     62          			  case '3':
     63          			  	LED8 = 0xF0;
   \                     ??removeCtrlTest_4:
   \   0000003C   EF00               LDI     R16, 240
   \   0000003E   BB08               OUT     0x18, R16
     64          				printf("你按下的按键是C\r\n");
   \   00000040   ....               LDI     R16, LOW(`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_2`)
   \   00000042   ....               LDI     R17, (`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_2`) >> 8
   \   00000044   ........           CALL    printf
     65          				break;
   \   00000048   C006               RJMP    ??removeCtrlTest_6
     66          			  case '4':
     67          				LED8 = 0xFF;
   \                     ??removeCtrlTest_5:
   \   0000004A   EF0F               LDI     R16, 255
   \   0000004C   BB08               OUT     0x18, R16
     68          				printf("你按下的按键是D\r\n");
   \   0000004E   ....               LDI     R16, LOW(`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_3`)
   \   00000050   ....               LDI     R17, (`?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_3`) >> 8
   \   00000052   ........           CALL    printf
     69          				break;
     70          			  default:break;
     71          			}
     72          			while(RC_KEY);
   \                     ??removeCtrlTest_6:
   \   00000056   9998               SBIC    0x13, 0x00
   \   00000058   CFFE               RJMP    ??removeCtrlTest_6
     73          		}
     74          		ledShowNumber(key - '0',wei_table,-1,10);
   \                     ??removeCtrlTest_1:
   \   0000005A   E00A               LDI     R16, 10
   \   0000005C   E010               LDI     R17, 0
   \   0000005E   931A               ST      -Y, R17
   \   00000060   930A               ST      -Y, R16
   \   00000062   EF6F               LDI     R22, 255
   \   00000064   EF7F               LDI     R23, 255
   \   00000066   ....               LDI     R20, LOW(wei_table)
   \   00000068   ....               LDI     R21, (wei_table) >> 8
   \   0000006A   2FE8               MOV     R30, R24
   \   0000006C   E0F0               LDI     R31, 0
   \   0000006E   97F0               SBIW    R31:R30, 48
   \   00000070   018F               MOVW    R17:R16, R31:R30
   \   00000072   2F21               MOV     R18, R17
   \   00000074   0F22               LSL     R18
   \   00000076   0B22               SBC     R18, R18
   \   00000078   2F32               MOV     R19, R18
   \   0000007A   ........           CALL    ledShowNumber
   \   0000007E   CFC1               RJMP    ??removeCtrlTest_0
   \   00000080                      REQUIRE _A_PORTB
   \   00000080                      REQUIRE _A_PINC
     75          	}
     76          }

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\304\\343\\260\\264\\`:
   \   00000000   E3C4B4B0C2CF       DC8 "\304\343\260\264\317\302\265\304\260\264\274\374\312\307A\015\012"
   \              C4B5B4B0FCBC
   \              C7CA0D41000A

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\304\\343\\260\\264\\_1`:
   \   00000000   E3C4B4B0C2CF       DC8 "\304\343\260\264\317\302\265\304\260\264\274\374\312\307B\015\012"
   \              C4B5B4B0FCBC
   \              C7CA0D42000A

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\304\\343\\260\\264\\_2`:
   \   00000000   E3C4B4B0C2CF       DC8 "\304\343\260\264\317\302\265\304\260\264\274\374\312\307C\015\012"
   \              C4B5B4B0FCBC
   \              C7CA0D43000A

   \                                 In  segment NEAR_ID, align 1, keep-with-next
   \                     `?<Initializer for <Constant "\\304\\343\\260\\264\\_3`:
   \   00000000   E3C4B4B0C2CF       DC8 "\304\343\260\264\317\302\265\304\260\264\274\374\312\307D\015\012"
   \              C4B5B4B0FCBC
   \              C7CA0D44000A

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2`:
   \   00000000                      DS8 18
   \   00000012                      REQUIRE `?<Initializer for <Constant "\\304\\343\\260\\264\\`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_1`:
   \   00000000                      DS8 18
   \   00000012                      REQUIRE `?<Initializer for <Constant "\\304\\343\\260\\264\\_1`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_2`:
   \   00000000                      DS8 18
   \   00000012                      REQUIRE `?<Initializer for <Constant "\\304\\343\\260\\264\\_2`

   \                                 In  segment NEAR_I, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_I>`
   \                     `?<Constant "\\304\\343\\260\\264\\317\\302\\265\\304\\2_3`:
   \   00000000                      DS8 18
   \   00000012                      REQUIRE `?<Initializer for <Constant "\\304\\343\\260\\264\\_3`

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      0      2   removeCtrlGetKey
      0      2   removeCtrlInit
      3      2   removeCtrlTest
        3      2   -> ledShowNumber
        1      2   -> printf
        1      2   -> removeCtrlGetKey


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      18  ?<Constant "\304\343\260\264\317\302\265\304\2
      18  ?<Constant "\304\343\260\264\317\302\265\304\2_1
      18  ?<Constant "\304\343\260\264\317\302\265\304\2_2
      18  ?<Constant "\304\343\260\264\317\302\265\304\2_3
      18  ?<Initializer for <Constant "\304\343\260\264\
      18  ?<Initializer for <Constant "\304\343\260\264\_1
      18  ?<Initializer for <Constant "\304\343\260\264\_2
      18  ?<Initializer for <Constant "\304\343\260\264\_3
       1  _A_DDRC
       1  _A_PINC
       1  _A_PORTB
       1  _A_PORTC
      40  removeCtrlGetKey
      14  removeCtrlInit
     128  removeCtrlTest
       7  -- Other

 
   4 bytes in segment ABSOLUTE
 182 bytes in segment CODE
   7 bytes in segment INITTAB
  72 bytes in segment NEAR_I
  72 bytes in segment NEAR_ID
 
 254 bytes of CODE memory (+ 7 bytes shared)
  72 bytes of DATA memory (+ 4 bytes shared)

Errors: none
Warnings: none
