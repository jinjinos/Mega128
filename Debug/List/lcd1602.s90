///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.21.3.50641 for Atmel AVR       20/Sep/2016  17:32:32 /
// Copyright 1996-2013 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  C:\Users\Administrator\Desktop\ATmega128Project\src\lcd /
//                    1602.c                                                  /
//    Command line =  C:\Users\Administrator\Desktop\ATmega128Project\src\lcd /
//                    1602.c --cpu=m128a -ms -o C:\Users\Administrator\Deskto /
//                    p\ATmega128Project\Debug\Obj\ -lCN                      /
//                    C:\Users\Administrator\Desktop\ATmega128Project\Debug\L /
//                    ist\ -lb C:\Users\Administrator\Desktop\ATmega128Projec /
//                    t\Debug\List\ -y --initializers_in_flash --no_cse       /
//                    --no_inline --no_code_motion --no_cross_call            /
//                    --no_clustering --no_tbaa --debug                       /
//                    -DENABLE_BIT_DEFINITIONS -e -I                          /
//                    C:\Users\Administrator\Desktop\ATmega128Project\inc\    /
//                    --eeprom_size 4096 --dlib --dlib_config "D:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.5\avr\LIB\DLIB\dlAVR-3s-ec_mul-f.h" --vla             /
//                    --use_c++_inline -On                                    /
//    List file    =  C:\Users\Administrator\Desktop\ATmega128Project\Debug\L /
//                    ist\lcd1602.s90                                         /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME lcd1602

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?EPILOGUE_B3_L09
        EXTERN ?PROLOGUE3_L09

        PUBWEAK _A_DDRA
        PUBWEAK _A_DDRD
        PUBWEAK _A_DDRF
        PUBWEAK _A_PORTA
        PUBWEAK _A_PORTD
        PUBWEAK _A_PORTF
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        PUBLIC lcd1602Init
        PUBLIC lcd1602_Clear
        PUBLIC lcd1602_Show_Char
        PUBLIC lcd1602_Show_Str
        PUBLIC lcd1602_Write_Command
        PUBLIC lcd1602_Write_Data


        ASEGN ABSOLUTE:DATA:NOROOT,031H
// union <unnamed> volatile __io _A_DDRD
_A_DDRD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,032H
// union <unnamed> volatile __io _A_PORTD
_A_PORTD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,03aH
// union <unnamed> volatile __io _A_DDRA
_A_DDRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,03bH
// union <unnamed> volatile __io _A_PORTA
_A_PORTA:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,061H
// union <unnamed> volatile __io _A_DDRF
_A_DDRF:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,062H
// union <unnamed> volatile __io _A_PORTF
_A_PORTF:
        DS8 1

        RSEG CODE:CODE:NOROOT(1)
lcd1602Init:
        LDI     R16, 255
        STS     _A_DDRF, R16
        LDI     R16, 255
        STS     _A_PORTF, R16
        LDI     R16, 255
        OUT     0x1A, R16
        LDI     R16, 255
        OUT     0x1B, R16
        LDI     R16, 255
        OUT     0x12, R16
        LDI     R16, 255
        OUT     0x11, R16
        SBI     0x12, 0x04
        SBI     0x12, 0x05
        LDI     R16, 255
        OUT     0x1B, R16
        CBI     0x12, 0x05
        LDI     R16, 51
        LDI     R17, 115
        NOP
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-6
        LDI     R16, 255
        OUT     0x1A, R16
        IN      R16, 0x1A
        ORI     R16, 0xE0
        OUT     0x1A, R16
        LDI     R16, 56
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDI     R16, 8
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDI     R16, 1
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDI     R16, 6
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDI     R16, 12
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        RET
        REQUIRE _A_DDRF
        REQUIRE _A_PORTF
        REQUIRE _A_DDRA
        REQUIRE _A_PORTA
        REQUIRE _A_PORTD
        REQUIRE _A_DDRD

        RSEG CODE:CODE:NOROOT(1)
lcd1602_Write_Command:
        LDS     R17, 98
        ANDI    R17, 0xF7
        STS     98, R17
        LDS     R17, 98
        ANDI    R17, 0xFD
        STS     98, R17
        LDS     R17, 98
        ANDI    R17, 0xFB
        STS     98, R17
        nop
        LDS     R17, 98
        ORI     R17, 0x08
        STS     98, R17
        OUT     0x1B, R16
        LDI     R18, 255
        LDI     R19, 35
        SUBI    R18, 1
        SBCI    R19, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDS     R17, 98
        ANDI    R17, 0xF7
        STS     98, R17
        RET
        REQUIRE _A_PORTF
        REQUIRE _A_PORTA

        RSEG CODE:CODE:NOROOT(1)
lcd1602_Write_Data:
        LDS     R17, 98
        ANDI    R17, 0xF7
        STS     98, R17
        LDS     R17, 98
        ORI     R17, 0x02
        STS     98, R17
        LDS     R17, 98
        ANDI    R17, 0xFB
        STS     98, R17
        nop
        LDS     R17, 98
        ORI     R17, 0x08
        STS     98, R17
        OUT     0x1B, R16
        LDI     R18, 255
        LDI     R19, 35
        SUBI    R18, 1
        SBCI    R19, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        LDS     R17, 98
        ANDI    R17, 0xF7
        STS     98, R17
        LDS     R17, 98
        ANDI    R17, 0xFD
        STS     98, R17
        RET
        REQUIRE _A_PORTF
        REQUIRE _A_PORTA

        RSEG CODE:CODE:NOROOT(1)
lcd1602_Clear:
        LDI     R16, 1
        RCALL   lcd1602_Write_Command
        LDI     R16, 255
        LDI     R17, 35
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
        RET

        RSEG CODE:CODE:NOROOT(1)
lcd1602_Show_Char:
        ST      -Y, R25
        ST      -Y, R24
        MOV     R24, R16
        MOV     R25, R17
        CPI     R24, 32
        BRCC    ??lcd1602_Show_Char_0
        CPI     R24, 16
        BRCS    ??lcd1602_Show_Char_1
        SUBI    R24, 80
        RJMP    ??lcd1602_Show_Char_2
??lcd1602_Show_Char_1:
        SUBI    R24, 128
??lcd1602_Show_Char_2:
        MOV     R16, R24
        RCALL   lcd1602_Write_Command
        MOV     R16, R25
        RCALL   lcd1602_Write_Data
??lcd1602_Show_Char_0:
        LD      R24, Y+
        LD      R25, Y+
        RET

        RSEG CODE:CODE:NOROOT(1)
lcd1602_Show_Str:
        CALL    ?PROLOGUE3_L09
        MOV     R26, R16
        MOVW    R25:R24, R19:R18
??lcd1602_Show_Str_0:
        MOVW    R31:R30, R25:R24
        LD      R16, Z
        TST     R16
        BREQ    ??lcd1602_Show_Str_1
        MOVW    R31:R30, R25:R24
        LD      R17, Z
        MOV     R16, R26
        RCALL   lcd1602_Show_Char
        INC     R26
        ADIW    R25:R24, 1
        RJMP    ??lcd1602_Show_Str_0
??lcd1602_Show_Str_1:
        LDI     R30, 3
        JMP     ?EPILOGUE_B3_L09

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        END
// 
//   6 bytes in segment ABSOLUTE
// 394 bytes in segment CODE
// 
// 394 bytes of CODE memory
//   0 bytes of DATA memory (+ 6 bytes shared)
//
//Errors: none
//Warnings: none
